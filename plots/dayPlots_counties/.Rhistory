# function to replace values in temp.df with matching number of Confirmed cases
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
for(j in 1:nrow(cleanCaseData_county[[i]])){
temp.df$Confirmed <- replace(temp.df$Confirmed,
temp.df$FIPS_county,
cleanCaseData_county[[i]]$FIPS_county[j],
cleanCaseData_county[[i]]$Confirmed[j] )
}
# plot cumulative cases map
map <- ggplot(temp.df) +
aes(long, lat, group=group, fill=Confirmed) +
geom_polygon(colour = NA, lwd=0.1) +
ylim(c(24, 50)) +
xlim(c(-127, -65)) +
theme_minimal() +
ggtitle("Cumulative confirmed COVID-19 cases") +
scale_fill_gradientn(name="",
colours=c("white", "yellow", "#fd8d3c", "#e31a1c", "#800026", "black"),
trans="pseudo_log", labels=comma,
limits=c(0,100000), breaks=c(0,10,100,1000,10000,100000)) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
geom_polygon(data=states, aes(x=long, y=lat, group=group), fill=NA, colour="gray", lwd=0.25)+
coord_map()
##############################
# daily new cases
##############################
# create some temporary data structures
temp.df <- counties.df
temp.df$Confirmed <- rep(0,nrow(temp.df))
temp.df_prevDay <- counties.df
temp.df_prevDay$Confirmed <- rep(0,nrow(temp.df))
# function to replace values in temp.df with matching number of Confirmed cases
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
if(i == 1){
temp.df$Confirmed <- 0
} else if(i > 1){
for(j in 1:nrow(cleanCaseData_county[[i-1]])){
temp.df_prevDay$Confirmed <- replace(temp.df_prevDay$Confirmed,
temp.df$FIPS_county,
cleanCaseData_county[[i-1]]$FIPS_county[j],
cleanCaseData_county[[i-1]]$Confirmed[j])
}
temp.df$Confirmed <- temp.df$Confirmed - temp.df_prevDay$Confirmed
temp.df$Confirmed[temp.df$Confirmed<0] <- 0
}
# plot daily new cases map
map2 <- ggplot(temp.df) +
aes(long, lat, group=group, fill=Confirmed) +
geom_polygon(colour = NA) +
ylim(c(24, 50)) +
xlim(c(-127, -65)) +
theme_minimal() +
ggtitle("Daily new confirmed COVID-19 cases") +
scale_fill_gradientn(name="",
colours=c("white", "#9ecae1", "#4292c6", "#08519c", "#08519c", "black"),
trans="pseudo_log", labels=comma,
limits=c(0,10000), breaks=c(0,10,100,1000,10000)) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate("text", label=gsub(".csv", "", files[i]), x=-117, y=25, cex=8) +
geom_polygon(data=states, aes(x=long, y=lat, group=group), fill=NA, colour="gray", lwd=0.25)+
coord_map()
plots <- arrangeGrob(grobs=list(map,map2), nrow=2)
# save maps as PNG files
setwd("C:/Users/DanJuliaPC/Desktop/covid19/plots/dayPlots_counties")
ggsave(plot=plots,
filename = paste(gsub(".csv", "", files[i+60]), "_counties.png", sep=""),
width = 8, height = 6,
device = "png",
dpi=600)
}
for(i in 1:length(cleanCaseData_county)){
print(i)
##############################
# cumulative cases
##############################
# create some temporary data structures
temp.df <- counties.df
temp.df$Confirmed <- rep(0,nrow(temp.df))
# function to replace values in temp.df with matching number of Confirmed cases
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
for(j in 1:nrow(cleanCaseData_county[[i]])){
temp.df$Confirmed <- replace(temp.df$Confirmed,
temp.df$FIPS_county,
cleanCaseData_county[[i]]$FIPS_county[j],
cleanCaseData_county[[i]]$Confirmed[j] )
}
# plot cumulative cases map
map <- ggplot(temp.df) +
aes(long, lat, group=group, fill=Confirmed) +
geom_polygon(colour = NA, lwd=0.1) +
ylim(c(24, 50)) +
xlim(c(-127, -65)) +
theme_minimal() +
ggtitle("Cumulative confirmed COVID-19 cases") +
scale_fill_gradientn(name="",
colours=c("white", "yellow", "#fd8d3c", "#e31a1c", "#800026", "black"),
trans="pseudo_log", labels=comma,
limits=c(0,100000), breaks=c(0,10,100,1000,10000,100000)) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
geom_polygon(data=states, aes(x=long, y=lat, group=group), fill=NA, colour="gray", lwd=0.25)+
coord_map()
##############################
# daily new cases
##############################
# create some temporary data structures
temp.df <- counties.df
temp.df$Confirmed <- rep(0,nrow(temp.df))
temp.df_prevDay <- counties.df
temp.df_prevDay$Confirmed <- rep(0,nrow(temp.df))
# function to replace values in temp.df with matching number of Confirmed cases
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
if(i == 1){
temp.df$Confirmed <- 0
print("test")
} else if(i > 1){
print("test2")
for(j in 1:nrow(cleanCaseData_county[[i-1]])){
temp.df_prevDay$Confirmed <- replace(temp.df_prevDay$Confirmed,
temp.df$FIPS_county,
cleanCaseData_county[[i-1]]$FIPS_county[j],
cleanCaseData_county[[i-1]]$Confirmed[j])
}
temp.df$Confirmed <- temp.df$Confirmed - temp.df_prevDay$Confirmed
temp.df$Confirmed[temp.df$Confirmed<0] <- 0
}
# plot daily new cases map
map2 <- ggplot(temp.df) +
aes(long, lat, group=group, fill=Confirmed) +
geom_polygon(colour = NA) +
ylim(c(24, 50)) +
xlim(c(-127, -65)) +
theme_minimal() +
ggtitle("Daily new confirmed COVID-19 cases") +
scale_fill_gradientn(name="",
colours=c("white", "#9ecae1", "#4292c6", "#08519c", "#08519c", "black"),
trans="pseudo_log", labels=comma,
limits=c(0,10000), breaks=c(0,10,100,1000,10000)) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate("text", label=gsub(".csv", "", files[i]), x=-117, y=25, cex=8) +
geom_polygon(data=states, aes(x=long, y=lat, group=group), fill=NA, colour="gray", lwd=0.25)+
coord_map()
plots <- arrangeGrob(grobs=list(map,map2), nrow=2)
# save maps as PNG files
setwd("C:/Users/DanJuliaPC/Desktop/covid19/plots/dayPlots_counties")
ggsave(plot=plots,
filename = paste(gsub(".csv", "", files[i+60]), "_counties.png", sep=""),
width = 8, height = 6,
device = "png",
dpi=600)
}
i=3
temp.df <- counties.df
temp.df$Confirmed <- rep(0,nrow(temp.df))
temp.df_prevDay <- counties.df
temp.df_prevDay$Confirmed <- rep(0,nrow(temp.df))
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
if(i == 1){
temp.df$Confirmed <- 0
print("test")
} else if(i > 1){
print("test2")
for(j in 1:nrow(cleanCaseData_county[[i-1]])){
temp.df_prevDay$Confirmed <- replace(temp.df_prevDay$Confirmed,
temp.df$FIPS_county,
cleanCaseData_county[[i-1]]$FIPS_county[j],
cleanCaseData_county[[i-1]]$Confirmed[j])
}
temp.df$Confirmed <- temp.df$Confirmed - temp.df_prevDay$Confirmed
temp.df$Confirmed[temp.df$Confirmed<0] <- 0
}
temp.df$Confirmed
temp.df_prevDay$Confirmed
temp.df$Confirmed
temp.df <- counties.df
temp.df$Confirmed <- rep(0,nrow(temp.df))
temp.df_prevDay <- counties.df
temp.df_prevDay$Confirmed <- rep(0,nrow(temp.df))
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
if(i == 1){
temp.df$Confirmed <- 0
print("test")
} else if(i > 1){
print("test2")
for(j in 1:nrow(cleanCaseData_county[[i-1]])){
temp.df_prevDay$Confirmed <- replace(temp.df_prevDay$Confirmed,
temp.df_prevDay$FIPS_county,
cleanCaseData_county[[i-1]]$FIPS_county[j],
cleanCaseData_county[[i-1]]$Confirmed[j])
}
temp.df$Confirmed <- temp.df$Confirmed - temp.df_prevDay$Confirmed
temp.df$Confirmed[temp.df$Confirmed<0] <- 0
}
temp.df$Confirmed
i=3
temp.df <- counties.df
temp.df$Confirmed <- rep(0,nrow(temp.df))
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
for(j in 1:nrow(cleanCaseData_county[[i]])){
temp.df$Confirmed <- replace(temp.df$Confirmed,
temp.df$FIPS_county,
cleanCaseData_county[[i]]$FIPS_county[j],
cleanCaseData_county[[i]]$Confirmed[j] )
}
map <- ggplot(temp.df) +
aes(long, lat, group=group, fill=Confirmed) +
geom_polygon(colour = NA, lwd=0.1) +
ylim(c(24, 50)) +
xlim(c(-127, -65)) +
theme_minimal() +
ggtitle("Cumulative confirmed COVID-19 cases") +
scale_fill_gradientn(name="",
colours=c("white", "yellow", "#fd8d3c", "#e31a1c", "#800026", "black"),
trans="pseudo_log", labels=comma,
limits=c(0,100000), breaks=c(0,10,100,1000,10000,100000)) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
geom_polygon(data=states, aes(x=long, y=lat, group=group), fill=NA, colour="gray", lwd=0.25)+
coord_map()
temp.df_prevDay <- counties.df
temp.df_prevDay$Confirmed <- rep(0,nrow(temp.df))
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
if(i == 1){
temp.df$Confirmed <- 0
print("test")
} else if(i > 1){
print("test2")
for(j in 1:nrow(cleanCaseData_county[[i-1]])){
temp.df_prevDay$Confirmed <- replace(temp.df_prevDay$Confirmed,
temp.df_prevDay$FIPS_county,
cleanCaseData_county[[i-1]]$FIPS_county[j],
cleanCaseData_county[[i-1]]$Confirmed[j])
}
temp.df$Confirmed <- temp.df$Confirmed - temp.df_prevDay$Confirmed
temp.df$Confirmed[temp.df$Confirmed<0] <- 0
}
map2 <- ggplot(temp.df) +
aes(long, lat, group=group, fill=Confirmed) +
geom_polygon(colour = NA) +
ylim(c(24, 50)) +
xlim(c(-127, -65)) +
theme_minimal() +
ggtitle("Daily new confirmed COVID-19 cases") +
scale_fill_gradientn(name="",
colours=c("white", "#9ecae1", "#4292c6", "#08519c", "#08519c", "black"),
trans="pseudo_log", labels=comma,
limits=c(0,10000), breaks=c(0,10,100,1000,10000)) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate("text", label=gsub(".csv", "", files[i]), x=-117, y=25, cex=8) +
geom_polygon(data=states, aes(x=long, y=lat, group=group), fill=NA, colour="gray", lwd=0.25)+
coord_map()
map2
for(i in 1:length(cleanCaseData_county)){
print(i)
##############################
# cumulative cases
##############################
# create some temporary data structures
temp.df <- counties.df
temp.df$Confirmed <- rep(0,nrow(temp.df))
# function to replace values in temp.df with matching number of Confirmed cases
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
for(j in 1:nrow(cleanCaseData_county[[i]])){
temp.df$Confirmed <- replace(temp.df$Confirmed,
temp.df$FIPS_county,
cleanCaseData_county[[i]]$FIPS_county[j],
cleanCaseData_county[[i]]$Confirmed[j] )
}
# plot cumulative cases map
map <- ggplot(temp.df) +
aes(long, lat, group=group, fill=Confirmed) +
geom_polygon(colour = NA, lwd=0.1) +
ylim(c(24, 50)) +
xlim(c(-127, -65)) +
theme_minimal() +
ggtitle("Cumulative confirmed COVID-19 cases") +
scale_fill_gradientn(name="",
colours=c("white", "yellow", "#fd8d3c", "#e31a1c", "#800026", "black"),
trans="pseudo_log", labels=comma,
limits=c(0,100000), breaks=c(0,10,100,1000,10000,100000)) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
geom_polygon(data=states, aes(x=long, y=lat, group=group), fill=NA, colour="gray", lwd=0.25)+
coord_map()
##############################
# daily new cases
##############################
# create some temporary data structures
temp.df_prevDay <- counties.df
temp.df_prevDay$Confirmed <- rep(0,nrow(temp.df))
# function to replace values in temp.df with matching number of Confirmed cases
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
if(i == 1){
temp.df$Confirmed <- 0
print("test")
} else if(i > 1){
print("test2")
for(j in 1:nrow(cleanCaseData_county[[i-1]])){
temp.df_prevDay$Confirmed <- replace(temp.df_prevDay$Confirmed,
temp.df_prevDay$FIPS_county,
cleanCaseData_county[[i-1]]$FIPS_county[j],
cleanCaseData_county[[i-1]]$Confirmed[j])
}
temp.df$Confirmed <- temp.df$Confirmed - temp.df_prevDay$Confirmed
temp.df$Confirmed[temp.df$Confirmed<0] <- 0
}
# plot daily new cases map
map2 <- ggplot(temp.df) +
aes(long, lat, group=group, fill=Confirmed) +
geom_polygon(colour = NA) +
ylim(c(24, 50)) +
xlim(c(-127, -65)) +
theme_minimal() +
ggtitle("Daily new confirmed COVID-19 cases") +
scale_fill_gradientn(name="",
colours=c("white", "#9ecae1", "#4292c6", "#08519c", "#08519c", "black"),
trans="pseudo_log", labels=comma,
limits=c(0,10000), breaks=c(0,10,100,1000,10000)) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate("text", label=gsub(".csv", "", files[i]), x=-117, y=25, cex=8) +
geom_polygon(data=states, aes(x=long, y=lat, group=group), fill=NA, colour="gray", lwd=0.25)+
coord_map()
plots <- arrangeGrob(grobs=list(map,map2), nrow=2)
# save maps as PNG files
setwd("C:/Users/DanJuliaPC/Desktop/covid19/plots/dayPlots_counties")
ggsave(plot=plots,
filename = paste(gsub(".csv", "", files[i+60]), "_counties.png", sep=""),
width = 8, height = 6,
device = "png",
dpi=600)
}
for(i in 1:length(cleanCaseData_county)){
print(i)
##############################
# cumulative cases
##############################
# create some temporary data structures
temp.df <- counties.df
temp.df$Confirmed <- rep(0,nrow(temp.df))
# function to replace values in temp.df with matching number of Confirmed cases
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
for(j in 1:nrow(cleanCaseData_county[[i]])){
temp.df$Confirmed <- replace(temp.df$Confirmed,
temp.df$FIPS_county,
cleanCaseData_county[[i]]$FIPS_county[j],
cleanCaseData_county[[i]]$Confirmed[j] )
}
# plot cumulative cases map
map <- ggplot(temp.df) +
aes(long, lat, group=group, fill=Confirmed) +
geom_polygon(colour = NA, lwd=0.1) +
ylim(c(24, 50)) +
xlim(c(-127, -65)) +
theme_minimal() +
ggtitle("Cumulative confirmed COVID-19 cases") +
scale_fill_gradientn(name="",
colours=c("white", "yellow", "#fd8d3c", "#e31a1c", "#800026", "black"),
trans="pseudo_log", labels=comma,
limits=c(0,100000), breaks=c(0,10,100,1000,10000,100000)) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
geom_polygon(data=states, aes(x=long, y=lat, group=group), fill=NA, colour="gray", lwd=0.25)+
coord_map()
##############################
# daily new cases
##############################
# create some temporary data structures
temp.df_prevDay <- counties.df
temp.df_prevDay$Confirmed <- rep(0,nrow(temp.df))
# function to replace values in temp.df with matching number of Confirmed cases
replace <- function(toReplaceVector, toMatchVector, matchValue, replaceValue){
matchIndex <- which(toMatchVector == matchValue)
toReplaceVector[matchIndex] <- replaceValue
return(toReplaceVector)
}
if(i == 1){
temp.df$Confirmed <- 0
} else if(i > 1){
for(j in 1:nrow(cleanCaseData_county[[i-1]])){
temp.df_prevDay$Confirmed <- replace(temp.df_prevDay$Confirmed,
temp.df_prevDay$FIPS_county,
cleanCaseData_county[[i-1]]$FIPS_county[j],
cleanCaseData_county[[i-1]]$Confirmed[j])
}
temp.df$Confirmed <- temp.df$Confirmed - temp.df_prevDay$Confirmed
temp.df$Confirmed[temp.df$Confirmed<0] <- 0
}
# plot daily new cases map
map2 <- ggplot(temp.df) +
aes(long, lat, group=group, fill=Confirmed) +
geom_polygon(colour = NA) +
ylim(c(24, 50)) +
xlim(c(-127, -65)) +
theme_minimal() +
ggtitle("Daily new confirmed COVID-19 cases") +
scale_fill_gradientn(name="",
colours=c("white", "#9ecae1", "#4292c6", "#08519c", "#08519c", "black"),
trans="pseudo_log", labels=comma,
limits=c(0,10000), breaks=c(0,10,100,1000,10000)) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
plot.title = element_text(size = 16, face = "bold"),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate("text", label=gsub(".csv", "", files[i+60]), x=-117, y=25, cex=8) +
geom_polygon(data=states, aes(x=long, y=lat, group=group), fill=NA, colour="gray", lwd=0.25)+
coord_map()
plots <- arrangeGrob(grobs=list(map,map2), nrow=2)
# save maps as PNG files
setwd("C:/Users/DanJuliaPC/Desktop/covid19/plots/dayPlots_counties")
ggsave(plot=plots,
filename = paste(gsub(".csv", "", files[i+60]), "_counties.png", sep=""),
width = 8, height = 6,
device = "png",
dpi=600)
}
